name: Build and test

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - plone-version: "52"
            python-version: 3.7
          - plone-version: "52"
            python-version: 3.8
          - plone-version: "60"
            python-version: 3.7
          - plone-version: "60"
            python-version: 3.8
          - plone-version: "60"
            python-version: 3.9
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/buildout-cache/eggs
            ~/extends
            webpack/node_modules
          key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ matrix.plone-version }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/*.cfg') }}-${{ hashFiles('**/constraints.txt') }}-${{ hashFiles('**/tox.ini') }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system libraries
        run: sudo apt-get install libxml2-dev libxslt1-dev libjpeg-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip virtualenv
      - name: setup buildout cache
        env:
          PLONE_VERSION: ${{ matrix.plone-version }}
        run: |
          virtualenv .
          mkdir -p ~/buildout-cache/{eggs,downloads}
          mkdir ~/.buildout
          echo "[buildout]" > $HOME/.buildout/default.cfg
          echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
          echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg
          bin/pip install -r requirements_plone$PLONE_VERSION.txt -c constraints_plone$PLONE_VERSION.txt
          cp test_plone$PLONE_VERSION.cfg buildout.cfg
      - name: Run buildout
        run: |
          bin/buildout -N -t 3 code-analysis:return-status-codes=True annotate
          bin/buildout -N -t 3 code-analysis:return-status-codes=True

      - name: Tests
        env:
          PLONE_VERSION: ${{ matrix.plone-version }}
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          bin/test --all
